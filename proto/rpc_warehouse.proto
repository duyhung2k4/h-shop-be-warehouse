syntax = "proto3";

package proto;

import "proto/model.proto";

option go_package = "grpc/proto";

// Warehouse
message GetWarehouseByProductIdReq {
    string productId = 1;
}
message GetWarehouseByProductIdRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
    
	int64 createdAt = 4;
	int64 updatedAt = 5;
	int64 deletedAt = 6;
}

message InsertWarehouseReq {
    string productId = 1;
}
message InsertWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}

message UpdateWarehouseReq {
    uint64 id = 1;
    uint64 count = 2;
}
message UpdateWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}

message UpCountWarehouseReq {
    uint64 id = 1;
    uint64 amount = 2;
}
message UpCountWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}

message DownCountWarehouseReq {
    uint64 id = 1;
    uint64 amount = 2;
}
message DownCountWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}

service WarehouseService {
    rpc GetWarehouseByProductId(GetWarehouseByProductIdReq) returns (GetWarehouseByProductIdRes) {}
    rpc Insert(InsertWarehouseReq) returns (InsertWarehouseRes) {}
    rpc Update(UpdateWarehouseReq) returns (UpdateWarehouseRes) {}
    rpc UpCount(UpCountWarehouseReq) returns (UpCountWarehouseRes) {}
    rpc DownCount(DownCountWarehouseReq) returns (DownCountWarehouseRes) {}
}


// Type Warehouse
message GetTypeInWarehouseByProductIdReq {
    string productId = 1;
}
message GetTypeInWarehouseByProductIdRes {
    repeated TypeInWarehouse data = 1;
}

message InsertTypeInWarehouseReq {
    string productId = 1;
    uint64 warehouseId = 2;
    string hasTag = 3;
    string name = 4;
    float price = 5;
    uint64 count = 6;
}
message InsertTypeInWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}

message UpdateTypeInWarehouseReq {
    uint64 id = 1;
    uint64 count = 2;
    string name = 3;
    string hastag = 4;
    float price = 5;
}
message UpdateTypeInWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
    string name = 4;
    string hastag = 5;
    float price = 6;
}

message DeleteTypeInWarehouseReq {
    uint64 id = 1;
}
message DeleteTypeInWarehouseRes {
    bool success = 1;
}

message UpCountTypeInWarehouseReq {
    uint64 id = 1;
    uint64 amount = 2;
}
message UpCountTypeInWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}
  
message DownCountTypeInWarehouseReq {
    uint64 id = 1;
    uint64 amount = 2;
}
message DownCountTypeInWarehouseRes {
    uint64 id = 1;
    string productId = 2;
    uint64 count = 3;
}

service TypeInWarehouseService {
    rpc GetTypeInWarehouseByProductId(GetTypeInWarehouseByProductIdReq) returns (GetTypeInWarehouseByProductIdRes) {}
    rpc Insert(InsertTypeInWarehouseReq) returns (InsertTypeInWarehouseRes) {}
    rpc Update(UpdateTypeInWarehouseReq) returns (UpdateTypeInWarehouseRes) {}
    rpc Delete(DeleteTypeInWarehouseReq) returns (DeleteTypeInWarehouseRes) {}
    rpc UpCount(UpCountTypeInWarehouseReq) returns (UpCountTypeInWarehouseRes) {}
    rpc DownCount(DownCountTypeInWarehouseReq) returns (DownCountTypeInWarehouseRes) {}
}

message Order {
    string productId = 1;
    uint64 warehouseId = 2;
    uint64 typeInWarehouseId = 3;
    uint64 amount = 4;
}
message CountPriceOrderReq {
    uint64 groupOrderId = 1;
    repeated Order orders = 2;
}
message CountPriceOrderRes {
    uint64 groupOrderId = 1;
    float price = 2;
}

service CountPriceService {
    rpc CountPriceOrder(CountPriceOrderReq) returns (CountPriceOrderRes) {}
}